# `version` is now deprecated
# https://docs.docker.com/compose/compose-file/#version-top-level-element

services:
  nextjs-dashboard:
    container_name: nextjs-dashboard
    build:
      context: ./nextjs-dashboard
      dockerfile: dev.Dockerfile
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "3000:3000"
    volumes:
      - ./nextjs-dashboard/app:/nextjs-dashboard/app
      - ./nextjs-dashboard/public:/nextjs-dashboard/public
      # It's not necessary to sync the `.next` directory
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - my-network

  caddy:
    image: caddy:2.7-alpine
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - $PWD/caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy-data:/data
    depends_on:
      - nextjs-dashboard
    networks:
      - my-network

  postgres:
    image: postgres
    container_name: postgres
    build:
      context: ./postgres
      dockerfile: dev.Dockerfile
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      # The only variable required is `POSTGRES_PASSWORD`, the rest are optional
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # Needed for health check even though POSTGRES_USER was already defined
      PGUSER: ${POSTGRES_USER}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 1s
      timeout: 5s
      retries: 10
    restart: always
    networks:
      - my-network

volumes:
  caddy-data:


networks:
  my-network:
    external: true
